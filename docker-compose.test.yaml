version: "3.9"

services:

  postgres:
    image: postgres
    environment:
      # promenne, ktere lze cist v kontejneru
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 60s
      timeout: 10s
      retries: 5
    restart: on-failure:3 # nedojde k restartu pokud je kontejner "unhealthy", maximalne 3 pokusy
    ports:
      - 5432:5432

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      # promenne, ktere lze cist v kontejneru
      - PGADMIN_DEFAULT_EMAIL=anoyne@anywhere.com
      - PGADMIN_DEFAULT_PASSWORD=example
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 60s
      timeout: 10s
      retries: 5
    ports:
      - 22080:80

  apollo:
    # image: hrbolek/apollo_federation:latest
    image: apollofederation:latest
    environment:
      # promenne, ktere lze cist v kontejneru
      # docker.for.win.localhost
      # host.docker.internal
      - PORT=3000
      - |
        SERVICES=
        [
          {"name": "ug", "url": "http://host.docker.internal:8001/gql"}
        ]
    healthcheck:
      # definice, umoznujici provest test, zda je kontejner v poradku (vsimnete si portu a srovnejte s portem v environment)
      interval: 60s
      retries: 3
      start_period: 60s
      timeout: 10s
    restart: on-failure:3 # nedojde k restartu pokud je kontejner "unhealthy", maximalne 3 pokusy
    ports: #v deploymentu by nebylo zadne mapovani portu
    #   # vnejsi port : port, kde sluzbu poskytuje kontejner
      - 33000:3000      